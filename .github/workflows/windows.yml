name: windows build

on: [push, pull_request, workflow_dispatch]

permissions:
  attestations: write
  contents: read
  id-token: write

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            base-devel
            mingw-w64-ucrt-x86_64-jq
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-pkg-config
            mingw-w64-ucrt-x86_64-vapoursynth
            mingw-w64-ucrt-x86_64-meson
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-spirv-tools
            mingw-w64-ucrt-x86_64-spirv-cross
            mingw-w64-ucrt-x86_64-vulkan
            mingw-w64-ucrt-x86_64-vulkan-headers
            mingw-w64-ucrt-x86_64-vulkan-loader
            mingw-w64-ucrt-x86_64-libdovi
            mingw-w64-ucrt-x86_64-lcms2
            mingw-w64-ucrt-x86_64-shaderc
      - name: Build vs-placebo
        run: |
          meson setup build --buildtype release --prefer-static --default-library=static -Dcpp_link_args='-static' -Dlibplacebo:demos=false -Dlibplacebo:glslang=enabled
          meson compile -vC build
      - name: Attest build provenance
        uses: actions/attest-build-provenance@v1.1.2
        if: ${{ github.event_name == 'push' }}
        with:
          subject-path: build/libvs_placebo.dll
      - name: Export version
        run: |
          echo "ARTIFACT_VERSION=$(meson introspect --projectinfo build | jq -r '.version')" >> $GITHUB_ENV
      - name: Upload
        uses: actions/upload-artifact@v4.3.3
        with:
          name: vsplacebo-windows-${{ env.ARTIFACT_VERSION }}
          path: build/libvs_placebo.dll
